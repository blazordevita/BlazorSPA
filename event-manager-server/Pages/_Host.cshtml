@page "/"
@namespace event_manager_server.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>event-manager-server</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
</head>
<body>
    <app>
        <component type="typeof(App)" render-mode="ServerPrerendered" />
    </app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="js/jquery.min.js"></script>
    <script src="js/popper.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script>
        window.mostraConferma = (id) => {
            $('#' + id).modal('show');
        };
        window.nascondiConferma = (id) => {
            $('#' + id).modal('hide');
        };
        window.mostraMappa = (contenitore, zona, zoom, eventi, componente) => {
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({'address': zona}, function(results, status) {
                if (status === 'OK') {
                    var map = new google.maps.Map(contenitore, {
                        zoom: zoom,
                        center: results[0].geometry.location
                    });
                    eventi.forEach(evento => {
                        geocoder.geocode({'address': evento.localita}, function(results, status) {
                            if (status === 'OK') {
                                var marker = new google.maps.Marker({
                                    map: map,
                                    position: results[0].geometry.location
                                });
                                marker.addListener('click', function() {
                                    componente.invokeMethodAsync('SelezionaEvento', evento)
                                        .then(data => { });
                                });
                            } else {
                                console.log('indirizzo non trovato: ' + status);
                            }
                        });
                    });
                } else {
                   console.log('zona non trovata: ' + status);
                }
            });
        }
    </script>
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=<API KEY>">
    </script>
</body>
</html>
